package com.om4a.ct2s.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FactPowerPlantsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactPowerPlantsAllPropertiesEquals(FactPowerPlants expected, FactPowerPlants actual) {
        assertFactPowerPlantsAutoGeneratedPropertiesEquals(expected, actual);
        assertFactPowerPlantsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactPowerPlantsAllUpdatablePropertiesEquals(FactPowerPlants expected, FactPowerPlants actual) {
        assertFactPowerPlantsUpdatableFieldsEquals(expected, actual);
        assertFactPowerPlantsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactPowerPlantsAutoGeneratedPropertiesEquals(FactPowerPlants expected, FactPowerPlants actual) {
        assertThat(actual)
            .as("Verify FactPowerPlants auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactPowerPlantsUpdatableFieldsEquals(FactPowerPlants expected, FactPowerPlants actual) {
        assertThat(actual)
            .as("Verify FactPowerPlants relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getIntalledCapacity()).as("check intalledCapacity").isEqualTo(expected.getIntalledCapacity()))
            .satisfies(a ->
                assertThat(a.getAvailabilityCapacity()).as("check availabilityCapacity").isEqualTo(expected.getAvailabilityCapacity())
            )
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactPowerPlantsUpdatableRelationshipsEquals(FactPowerPlants expected, FactPowerPlants actual) {
        assertThat(actual)
            .as("Verify FactPowerPlants relationships")
            .satisfies(a -> assertThat(a.getCommissioningDate()).as("check commissioningDate").isEqualTo(expected.getCommissioningDate()))
            .satisfies(a ->
                assertThat(a.getDecommissioningDate()).as("check decommissioningDate").isEqualTo(expected.getDecommissioningDate())
            )
            .satisfies(a -> assertThat(a.getCountry()).as("check country").isEqualTo(expected.getCountry()))
            .satisfies(a -> assertThat(a.getTechnology()).as("check technology").isEqualTo(expected.getTechnology()))
            .satisfies(a -> assertThat(a.getMetadata()).as("check metadata").isEqualTo(expected.getMetadata()));
    }
}
