package com.om4a.ct2s.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FactTransportAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactTransportAllPropertiesEquals(FactTransport expected, FactTransport actual) {
        assertFactTransportAutoGeneratedPropertiesEquals(expected, actual);
        assertFactTransportAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactTransportAllUpdatablePropertiesEquals(FactTransport expected, FactTransport actual) {
        assertFactTransportUpdatableFieldsEquals(expected, actual);
        assertFactTransportUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactTransportAutoGeneratedPropertiesEquals(FactTransport expected, FactTransport actual) {
        assertThat(actual)
            .as("Verify FactTransport auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactTransportUpdatableFieldsEquals(FactTransport expected, FactTransport actual) {
        assertThat(actual)
            .as("Verify FactTransport relevant properties")
            .satisfies(a -> assertThat(a.getValue()).as("check value").isEqualTo(expected.getValue()))
            .satisfies(a -> assertThat(a.getTypeOfMobility()).as("check typeOfMobility").isEqualTo(expected.getTypeOfMobility()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactTransportUpdatableRelationshipsEquals(FactTransport expected, FactTransport actual) {
        assertThat(actual)
            .as("Verify FactTransport relationships")
            .satisfies(a -> assertThat(a.getYear()).as("check year").isEqualTo(expected.getYear()))
            .satisfies(a -> assertThat(a.getCountry()).as("check country").isEqualTo(expected.getCountry()))
            .satisfies(a -> assertThat(a.getMetadata()).as("check metadata").isEqualTo(expected.getMetadata()));
    }
}
