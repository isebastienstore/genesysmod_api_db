package com.om4a.ct2s.domain;

import static com.om4a.ct2s.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class MetadataAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetadataAllPropertiesEquals(Metadata expected, Metadata actual) {
        assertMetadataAutoGeneratedPropertiesEquals(expected, actual);
        assertMetadataAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetadataAllUpdatablePropertiesEquals(Metadata expected, Metadata actual) {
        assertMetadataUpdatableFieldsEquals(expected, actual);
        assertMetadataUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetadataAutoGeneratedPropertiesEquals(Metadata expected, Metadata actual) {
        assertThat(actual)
            .as("Verify Metadata auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetadataUpdatableFieldsEquals(Metadata expected, Metadata actual) {
        assertThat(actual)
            .as("Verify Metadata relevant properties")
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getUpdatedBy()).as("check updatedBy").isEqualTo(expected.getUpdatedBy()))
            .satisfies(a -> assertThat(a.getAction()).as("check action").isEqualTo(expected.getAction()))
            .satisfies(a ->
                assertThat(a.getCreatedAt())
                    .as("check createdAt")
                    .usingComparator(zonedDataTimeSameInstant)
                    .isEqualTo(expected.getCreatedAt())
            )
            .satisfies(a ->
                assertThat(a.getUpdatedAt())
                    .as("check updatedAt")
                    .usingComparator(zonedDataTimeSameInstant)
                    .isEqualTo(expected.getUpdatedAt())
            )
            .satisfies(a -> assertThat(a.getSource()).as("check source").isEqualTo(expected.getSource()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetadataUpdatableRelationshipsEquals(Metadata expected, Metadata actual) {
        // empty method
    }
}
