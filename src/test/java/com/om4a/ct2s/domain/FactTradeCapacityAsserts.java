package com.om4a.ct2s.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FactTradeCapacityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactTradeCapacityAllPropertiesEquals(FactTradeCapacity expected, FactTradeCapacity actual) {
        assertFactTradeCapacityAutoGeneratedPropertiesEquals(expected, actual);
        assertFactTradeCapacityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactTradeCapacityAllUpdatablePropertiesEquals(FactTradeCapacity expected, FactTradeCapacity actual) {
        assertFactTradeCapacityUpdatableFieldsEquals(expected, actual);
        assertFactTradeCapacityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactTradeCapacityAutoGeneratedPropertiesEquals(FactTradeCapacity expected, FactTradeCapacity actual) {
        assertThat(actual)
            .as("Verify FactTradeCapacity auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactTradeCapacityUpdatableFieldsEquals(FactTradeCapacity expected, FactTradeCapacity actual) {
        assertThat(actual)
            .as("Verify FactTradeCapacity relevant properties")
            .satisfies(a -> assertThat(a.getValue()).as("check value").isEqualTo(expected.getValue()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFactTradeCapacityUpdatableRelationshipsEquals(FactTradeCapacity expected, FactTradeCapacity actual) {
        assertThat(actual)
            .as("Verify FactTradeCapacity relationships")
            .satisfies(a -> assertThat(a.getYear()).as("check year").isEqualTo(expected.getYear()))
            .satisfies(a -> assertThat(a.getCountry1()).as("check country1").isEqualTo(expected.getCountry1()))
            .satisfies(a -> assertThat(a.getCountry2()).as("check country2").isEqualTo(expected.getCountry2()))
            .satisfies(a -> assertThat(a.getFuel()).as("check fuel").isEqualTo(expected.getFuel()))
            .satisfies(a -> assertThat(a.getMetadata()).as("check metadata").isEqualTo(expected.getMetadata()));
    }
}
